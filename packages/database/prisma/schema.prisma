generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  directUrl    = env("DIRECT_URL")
  relationMode = "prisma"
}

model Attendee {
  id                   Int                   @id @default(autoincrement())
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
  deletedAt            DateTime?
  ticketSystemId       Int
  firstName            String
  lastName             String
  displayName          String
  gender               String
  email                String                @unique
  mobilePhone          String?
  birthDate            DateTime?
  city                 String?
  state                String?
  linkedin             String?
  github               String?
  company              String?
  companySegmentId     Int?
  companySegment       CompanySegment?       @relation(fields: [companySegmentId], references: [id])
  positionId           Int?
  position             Position?             @relation(fields: [positionId], references: [id])
  positionLevelId      Int?
  positionLevel        PositionLevel?        @relation(fields: [positionLevelId], references: [id])
  programmingLanguages ProgrammingLanguage[]
  events               Event[]

  @@index([companySegmentId])
  @@index([positionId])
  @@index([positionLevelId])
}

model CompanySegment {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  deletedAt DateTime?
  name      String
  attendees Attendee[]
}

model Position {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  deletedAt DateTime?
  name      String
  attendees Attendee[]
}

model PositionLevel {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  deletedAt DateTime?
  name      String
  attendees Attendee[]
}

model ProgrammingLanguage {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  deletedAt DateTime?
  name      String
  attendees Attendee[]
}

model Event {
  id                Int        @id @default(autoincrement())
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  deletedAt         DateTime?
  ticketSystemId    Int        @unique
  name              String
  startDate         DateTime?
  endDate           DateTime?
  ticketSystemUrl   String?
  ticketSystemImage String?
  attendees         Attendee[]
}
